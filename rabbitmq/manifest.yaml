apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database 
type: Opaque
data:
  RABBITMQ_DEFAULT_USER: "cm9ib3Nob3AK"
  RABBITMQ_DEFAULT_PASS: "cm9ib3Nob3AxMjMK"
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-headless
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  clusterIP: None
  selector:
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
  - protocol: TCP
    port: 5672 # service port
    targetPort: 5672 # container port
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  selector:  
    component: rabbitmq
    project: roboshop
    tier: database
  ports:
  - protocol: TCP
    port: 5672
    targetPort: 5672
---
apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: rabbitmq
  namespace: roboshop
  labels:
    component: rabbitmq
    project: roboshop
    tier: database
spec:
  selector:
    matchLabels:   # has to match .spec.template.metadata.labels
      component: rabbitmq
      project: roboshop
      tier: database
  serviceName: "rabbitmq-headless"  # this should be headless service
  replicas: 3
  template:
    metadata:
      labels:
        component: rabbitmq
        project: roboshop
        tier: database
    spec:
      containers:
      - name: rabbitmq
        image: gsurendhar/rabbitmq:v1
        volumeMounts: 
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        envFrom:
        - secretRef:
            name: rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # storageClassName: "roboshop-ebs"
      storageClassName: standard
      resources:
        requests:
          storage: 2Gi
